[{"id":0,"href":"/docs/","title":"Sleep App","section":"Sleep App - Kubernetes Resource Optimizer","content":" Sleep App # A resource management tool designed to optimize Kubernetes usage and reduce costs.\nSleep App provides both manual and automated controls for Kubernetes workloads, allowing DevOps teams and developers to put resources to sleep when not needed.\n"},{"id":1,"href":"/docs/overview/","title":"Overview","section":"Sleep App","content":" Overview # Sleep App provides both manual and automated controls for Kubernetes workloads, allowing DevOps teams and developers to put resources to sleep when not needed.\nWith Laravel Backpack integration, Sleep App offers an intuitive web interface for managing Kubernetes Deployments and StatefulSets, eliminating the need for complex CLI commands or Kubernetes RBAC configurations.\n"},{"id":2,"href":"/docs/features/","title":"Features","section":"Sleep App","content":" Features # Sleep App includes the following key features:\nProject Management: Manage projects and subservices efficiently. Manual \u0026amp; Auto Sleep: Automatically sleep services when idle to save resources. Resource Control: Soft and hard refresh options for Kubernetes resources. Application Structure: Display applications and their states in a folder view. Time-Based Activation: Activate a project or subservice for a set period. Dashboard View: Click on rows to view project details in a structured manner. Exclude: Don\u0026rsquo;t show application in the Sleep App. "},{"id":3,"href":"/docs/data-flow/","title":"Data Flow","section":"Sleep App","content":" Data Flow # Sleep App organizes Kubernetes resources in a hierarchical structure:\nProject └── Subservice └── Resources (Deployment \u0026amp; StatefulSet) Example Structure # chatbot └── english └── rasa-worker-en └── rasa-webserver-en └── rasa-mysql-en └── indonesia └── rasa-worker-id └── rasa-webserver-id └── rasa-mysql-id ai └── milvus └── milvus-postgresql └── milvus-webserver mindsdb └── mindsdb-postgresql └── mindsdb-webserver sleep-app └── sleep-app-no-subservice └── sleep-app "},{"id":4,"href":"/docs/how-to-use/","title":"How to Use","section":"Sleep App","content":" How to Use # Adding a Service # To add a service, modify your Deployment/StatefulSet configuration by adding labels:\napiVersion: apps/v1 kind: Deployment metadata: labels: project: infra # Add Project subservice: exporter # Add Subservice (Optional) name: apz-exporter Main Functions # Activate services for a set period of time Put services to sleep manually Enable auto sleep to automatically manage resources Exclude services from management Hard refresh to sync with Kubernetes Comparison # Sleep App is simpler than K9S and Kubectl while providing specialized functionality for resource management.\n"}]